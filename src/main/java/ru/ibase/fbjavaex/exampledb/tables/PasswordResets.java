/*
 * This file is generated by jOOQ.
*/
package ru.ibase.fbjavaex.exampledb.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.ibase.fbjavaex.exampledb.DefaultSchema;
import ru.ibase.fbjavaex.exampledb.tables.records.PasswordResetsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PasswordResets extends TableImpl<PasswordResetsRecord> {

    private static final long serialVersionUID = 755849698;

    /**
     * The reference instance of <code>password_resets</code>
     */
    public static final PasswordResets PASSWORD_RESETS = new PasswordResets();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PasswordResetsRecord> getRecordType() {
        return PasswordResetsRecord.class;
    }

    /**
     * The column <code>password_resets.email</code>.
     */
    public final TableField<PasswordResetsRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>password_resets.token</code>.
     */
    public final TableField<PasswordResetsRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>password_resets.created_at</code>.
     */
    public final TableField<PasswordResetsRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>password_resets</code> table reference
     */
    public PasswordResets() {
        this(DSL.name("password_resets"), null);
    }

    /**
     * Create an aliased <code>password_resets</code> table reference
     */
    public PasswordResets(String alias) {
        this(DSL.name(alias), PASSWORD_RESETS);
    }

    /**
     * Create an aliased <code>password_resets</code> table reference
     */
    public PasswordResets(Name alias) {
        this(alias, PASSWORD_RESETS);
    }

    private PasswordResets(Name alias, Table<PasswordResetsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PasswordResets(Name alias, Table<PasswordResetsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PasswordResets as(String alias) {
        return new PasswordResets(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PasswordResets as(Name alias) {
        return new PasswordResets(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PasswordResets rename(String name) {
        return new PasswordResets(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PasswordResets rename(Name name) {
        return new PasswordResets(name, null);
    }
}
